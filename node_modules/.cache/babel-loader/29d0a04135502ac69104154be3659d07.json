{"ast":null,"code":"var _jsxFileName = \"/home/vmo/Desktop/demo/test/project-vtca/full-flim-vn/src/views/components/FilmListingsByGenre/components/List.js\",\n  _s = $RefreshSig$();\n/* eslint-disable max-lines */\n/* eslint-disable indent */\n/* eslint-disable max-len */\nimport { Modal } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { FaPlay, FaVolumeMute, FaVolumeUp } from 'react-icons/fa';\nimport { VscClose } from 'react-icons/vsc';\nimport ReactPlayer from 'react-player';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { categoriesSelectors } from 'state/modules/categories';\nimport capitalizeFirstLetter from 'utils/capitalizeFirstLetter';\nimport Gallery from 'views/components/Gallery';\nimport RatingStar from 'views/components/RatingStar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = props => {\n  _s();\n  const {\n    films,\n    className,\n    order,\n    numItemPerList,\n    margin,\n    related\n  } = props;\n  const [currentFilm, setCurrentFilm] = useState({});\n  const [modalFilm, setModalFilm] = useState(false);\n  const [muted, setMuted] = useState(false);\n  const categories = useSelector(state => categoriesSelectors.categories(state)).toJS();\n  const toggleModalFilm = () => {\n    setModalFilm(!modalFilm);\n  };\n  const handleGetFilm = film => {\n    setCurrentFilm(film);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: `filmListingsByGenre__list flex-1 flex flex-listFilm ${className}`,\n    style: {\n      order\n    },\n    children: /*#__PURE__*/_jsxDEV(Gallery, {\n      films: films,\n      numItemPerList: numItemPerList,\n      margin: margin,\n      handleGetFilm: handleGetFilm,\n      toggleModalFilm: toggleModalFilm,\n      related: related\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"+T8eHWib03vS5VPKFlXrRfzWKGQ=\", false, function () {\n  return [useSelector];\n});\n_c = List;\nList.propTypes = {\n  films: PropTypes.array.isRequired,\n  className: PropTypes.string.isRequired,\n  order: PropTypes.number,\n  numItemPerList: PropTypes.number.isRequired,\n  margin: PropTypes.string.isRequired,\n  related: PropTypes.bool\n};\nList.defaultProps = {\n  order: 1,\n  related: false\n};\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Modal","PropTypes","React","useState","FaPlay","FaVolumeMute","FaVolumeUp","VscClose","ReactPlayer","useSelector","Link","categoriesSelectors","capitalizeFirstLetter","Gallery","RatingStar","jsxDEV","_jsxDEV","List","props","_s","films","className","order","numItemPerList","margin","related","currentFilm","setCurrentFilm","modalFilm","setModalFilm","muted","setMuted","categories","state","toJS","toggleModalFilm","handleGetFilm","film","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","array","isRequired","string","number","bool","defaultProps","$RefreshReg$"],"sources":["/home/vmo/Desktop/demo/test/project-vtca/full-flim-vn/src/views/components/FilmListingsByGenre/components/List.js"],"sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable indent */\n/* eslint-disable max-len */\nimport { Modal } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { FaPlay, FaVolumeMute, FaVolumeUp } from 'react-icons/fa';\nimport { VscClose } from 'react-icons/vsc';\nimport ReactPlayer from 'react-player';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { categoriesSelectors } from 'state/modules/categories';\nimport capitalizeFirstLetter from 'utils/capitalizeFirstLetter';\nimport Gallery from 'views/components/Gallery';\nimport RatingStar from 'views/components/RatingStar';\n\nconst List = (props) => {\n  const { films, className, order, numItemPerList, margin, related } = props;\n  const [currentFilm, setCurrentFilm] = useState({});\n  const [modalFilm, setModalFilm] = useState(false);\n  const [muted, setMuted] = useState(false);\n  const categories = useSelector((state) =>\n    categoriesSelectors.categories(state),\n  ).toJS();\n\n  const toggleModalFilm = () => {\n    setModalFilm(!modalFilm);\n  };\n\n  const handleGetFilm = (film) => {\n    setCurrentFilm(film);\n  };\n\n  return (\n    <ul\n      className={`filmListingsByGenre__list flex-1 flex flex-listFilm ${className}`}\n      style={{\n        order,\n      }}\n    >\n      {/* <Modal\n        open={modalFilm}\n        onClose={toggleModalFilm}\n        aria-labelledby='simple-modal-title'\n        aria-describedby='simple-modal-description'\n        className='overflow-auto pb-4rem'\n      >\n        <div className='filmListingsByGenre__modalFilm absolute top-4rem left-1/2 transform -translate-x-1/2 bg-black-body flex items-center flex-col w-4/5 sm:w-3/4 2xl:w-1/2 overflow-hidden rounded-2xl outline-none relative mb-4rem'>\n          <div className='filmListingsByGenre__modalFilm-main p-previewFilm w-full absolute'>\n            <ReactPlayer\n              url={currentFilm.trailerURL}\n              playing\n              loop\n              muted={muted}\n              style={{\n                position: 'absolute',\n                top: 0,\n                right: 0,\n              }}\n              width='100%'\n              height='100%'\n              config={{\n                trailer: {\n                  playerVars: {\n                    fs: 0,\n                  },\n                },\n              }}\n            />\n          </div>\n          <div className='filmListingsByGenre__modalFilm-main-cover z-1 bg-coverModalFilm p-previewFilm w-full relative'>\n            <h3 className='text-30 2xl:text-40 text-white font-bold w-50rem absolute left-4rem bottom-16rem'>\n              {currentFilm.title}\n            </h3>\n            <div className='absolute bottom-6rem right-4rem cursor-pointer' onClick={() => setMuted(!muted)}>\n              {muted ? <FaVolumeMute className='text-40 text-white leading-20' /> : <FaVolumeUp className='text-40 text-white leading-20' />}\n            </div>\n            <div\n              className='absolute top-3rem right-4rem bg-black-body hover:bg-gray-primary-d transition-all duration-200 p-2 rounded-full cursor-pointer'\n              onClick={toggleModalFilm}\n            >\n              <VscClose className='text-30 text-white' />\n            </div>\n            <div className='absolute bottom-13rem left-4rem'>\n              <RatingStar\n                className='filmListingsByGenre__modalFilm-main-rating'\n                ratingPercent={\n                  !currentFilm.reviews\n                    ? 0\n                    : currentFilm.reviews.length === 0\n                    ? 0\n                    : (currentFilm.reviews.reduce(\n                        (average, review) => average + review.rating,\n                        0,\n                      ) /\n                        currentFilm.reviews.length /\n                        5) *\n                      100\n                }\n              />\n            </div>\n            <Link\n              to={`/film/${currentFilm.slug}`}\n              className='bg-white hover:bg-opacity-70 rounded-lg text-20 2xl:text-24 text-black-body py-3 px-16 font-bold absolute left-4rem bottom-6rem'\n              onClick={() => {\n                toggleModalFilm();\n              }}\n            >\n              <FaPlay className='inline-block mr-6' />\n              Phát\n            </Link>\n          </div>\n          <div className='filmListingsByGenre__modalFilm-info relative px-4rem pb-4rem flex'>\n            <div className='filmListingsByGenre__modalFilm-info-desc text-white text-18 w-3/5 mr-10'>\n              <span className='block text-20 font-bold mb-2'>Nội dung</span>\n              <span>{currentFilm.description}</span>\n            </div>\n            <div className='filmListingsByGenre__modalFilm-info-desc text-14 w-2/5'>\n              <div className='mb-4'>\n                <span className='text-gray-primary'>Diễn viên:</span>\n                <span className='capitalize text-white'>\n                  {currentFilm.actor\n                    ? ` ${capitalizeFirstLetter(currentFilm.actor?.join(', '))}`\n                    : ''}\n                </span>\n              </div>\n              <div>\n                <span className='text-gray-primary'>Thể loại:</span>\n                <ul className='text-white inline-block'>\n                  <>&nbsp;</>\n                  {currentFilm.genre\n                    ? categories\n                        .filter((item) => {\n                          for (let i = 0; i < currentFilm.genre.length; i++) {\n                            if (item.genre === currentFilm.genre[i]) {\n                              return true;\n                            }\n                          }\n                          return false;\n                        })\n                        .map((item, index) => (\n                          <li className='inline-block' key={item._id}>\n                            {index === 0 ? '' : <>,&nbsp;</>}\n                            <Link\n                              to={`/category?genre=${item.genre}`}\n                              className='hover:underline'\n                            >\n                              {item.vn}\n                            </Link>\n                          </li>\n                        ))\n                    : null}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal> */}\n      <Gallery\n        films={films}\n        numItemPerList={numItemPerList}\n        margin={margin}\n        handleGetFilm={handleGetFilm}\n        toggleModalFilm={toggleModalFilm}\n        related={related}\n      />\n    </ul>\n  );\n};\n\nList.propTypes = {\n  films: PropTypes.array.isRequired,\n  className: PropTypes.string.isRequired,\n  order: PropTypes.number,\n  numItemPerList: PropTypes.number.isRequired,\n  margin: PropTypes.string.isRequired,\n  related: PropTypes.bool,\n};\n\nList.defaultProps = {\n  order: 1,\n  related: false,\n};\n\nexport default List;\n"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,YAAY,EAAEC,UAAU,QAAQ,gBAAgB;AACjE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,WAAW,MAAM,cAAc;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,qBAAqB,MAAM,6BAA6B;AAC/D,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,KAAK;IAAEC,cAAc;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGP,KAAK;EAC1E,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM6B,UAAU,GAAGvB,WAAW,CAAEwB,KAAK,IACnCtB,mBAAmB,CAACqB,UAAU,CAACC,KAAK,CAAC,CACtC,CAACC,IAAI,EAAE;EAER,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BN,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMQ,aAAa,GAAIC,IAAI,IAAK;IAC9BV,cAAc,CAACU,IAAI,CAAC;EACtB,CAAC;EAED,oBACErB,OAAA;IACEK,SAAS,EAAG,uDAAsDA,SAAU,EAAE;IAC9EiB,KAAK,EAAE;MACLhB;IACF,CAAE;IAAAiB,QAAA,eAwHFvB,OAAA,CAACH,OAAO;MACNO,KAAK,EAAEA,KAAM;MACbG,cAAc,EAAEA,cAAe;MAC/BC,MAAM,EAAEA,MAAO;MACfY,aAAa,EAAEA,aAAc;MAC7BD,eAAe,EAAEA,eAAgB;MACjCV,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAET,CAAC;AAACxB,EAAA,CAxJIF,IAAI;EAAA,QAKWR,WAAW;AAAA;AAAAmC,EAAA,GAL1B3B,IAAI;AA0JVA,IAAI,CAAC4B,SAAS,GAAG;EACfzB,KAAK,EAAEnB,SAAS,CAAC6C,KAAK,CAACC,UAAU;EACjC1B,SAAS,EAAEpB,SAAS,CAAC+C,MAAM,CAACD,UAAU;EACtCzB,KAAK,EAAErB,SAAS,CAACgD,MAAM;EACvB1B,cAAc,EAAEtB,SAAS,CAACgD,MAAM,CAACF,UAAU;EAC3CvB,MAAM,EAAEvB,SAAS,CAAC+C,MAAM,CAACD,UAAU;EACnCtB,OAAO,EAAExB,SAAS,CAACiD;AACrB,CAAC;AAEDjC,IAAI,CAACkC,YAAY,GAAG;EAClB7B,KAAK,EAAE,CAAC;EACRG,OAAO,EAAE;AACX,CAAC;AAED,eAAeR,IAAI;AAAC,IAAA2B,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module"}