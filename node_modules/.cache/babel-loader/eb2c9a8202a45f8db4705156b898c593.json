{"ast":null,"code":"const {\n  fromJS\n} = require('immutable');\nconst {\n  handleActions\n} = require('redux-actions');\nconst {\n  default: types\n} = require('./types');\nconst msg = state => state.getIn(['error', 'msg']);\nconst status = state => state.getIn(['error', 'status']);\nconst id = state => state.getIn(['error', 'id']);\nconst error = state => state.get('error').toJS();\nexport const selectors = {\n  msg,\n  status,\n  id,\n  error\n};\nconst initialState = fromJS({\n  msg: {},\n  status: null,\n  id: null\n});\nconst getErrorsSuccess = (state, action) => {\n  return state.set('msg', fromJS(action.payload.msg)).set('status', action.payload.status).set('id', action.payload.id);\n};\nconst clearErrorsSuccess = state => state.set('msg', {}).set('status', null).set('id', null);\nconst reducer = handleActions({\n  [types.GET_ERRORS_SUCCESS]: getErrorsSuccess,\n  [types.CLEAR_ERRORS_SUCCESS]: clearErrorsSuccess\n}, initialState);\nexport default reducer;","map":{"version":3,"names":["fromJS","require","handleActions","default","types","msg","state","getIn","status","id","error","get","toJS","selectors","initialState","getErrorsSuccess","action","set","payload","clearErrorsSuccess","reducer","GET_ERRORS_SUCCESS","CLEAR_ERRORS_SUCCESS"],"sources":["/home/vmo/Desktop/test/vmoflix-vn/src/state/modules/error/reducer.js"],"sourcesContent":["const { fromJS } = require('immutable');\nconst { handleActions } = require('redux-actions');\nconst { default: types } = require('./types');\n\nconst msg = (state) => state.getIn(['error', 'msg']);\nconst status = (state) => state.getIn(['error', 'status']);\nconst id = (state) => state.getIn(['error', 'id']);\nconst error = (state) => state.get('error').toJS();\n\nexport const selectors = {\n  msg,\n  status,\n  id,\n  error,\n};\n\nconst initialState = fromJS({\n  msg: {},\n  status: null,\n  id: null,\n});\n\nconst getErrorsSuccess = (state, action) => {\n  return state\n    .set('msg', fromJS(action.payload.msg))\n    .set('status', action.payload.status)\n    .set('id', action.payload.id);\n};\nconst clearErrorsSuccess = (state) =>\n  state.set('msg', {}).set('status', null).set('id', null);\n\nconst reducer = handleActions(\n  {\n    [types.GET_ERRORS_SUCCESS]: getErrorsSuccess,\n    [types.CLEAR_ERRORS_SUCCESS]: clearErrorsSuccess,\n  },\n  initialState,\n);\n\nexport default reducer;\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACvC,MAAM;EAAEC;AAAc,CAAC,GAAGD,OAAO,CAAC,eAAe,CAAC;AAClD,MAAM;EAAEE,OAAO,EAAEC;AAAM,CAAC,GAAGH,OAAO,CAAC,SAAS,CAAC;AAE7C,MAAMI,GAAG,GAAIC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACpD,MAAMC,MAAM,GAAIF,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC1D,MAAME,EAAE,GAAIH,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAClD,MAAMG,KAAK,GAAIJ,KAAK,IAAKA,KAAK,CAACK,GAAG,CAAC,OAAO,CAAC,CAACC,IAAI,EAAE;AAElD,OAAO,MAAMC,SAAS,GAAG;EACvBR,GAAG;EACHG,MAAM;EACNC,EAAE;EACFC;AACF,CAAC;AAED,MAAMI,YAAY,GAAGd,MAAM,CAAC;EAC1BK,GAAG,EAAE,CAAC,CAAC;EACPG,MAAM,EAAE,IAAI;EACZC,EAAE,EAAE;AACN,CAAC,CAAC;AAEF,MAAMM,gBAAgB,GAAGA,CAACT,KAAK,EAAEU,MAAM,KAAK;EAC1C,OAAOV,KAAK,CACTW,GAAG,CAAC,KAAK,EAAEjB,MAAM,CAACgB,MAAM,CAACE,OAAO,CAACb,GAAG,CAAC,CAAC,CACtCY,GAAG,CAAC,QAAQ,EAAED,MAAM,CAACE,OAAO,CAACV,MAAM,CAAC,CACpCS,GAAG,CAAC,IAAI,EAAED,MAAM,CAACE,OAAO,CAACT,EAAE,CAAC;AACjC,CAAC;AACD,MAAMU,kBAAkB,GAAIb,KAAK,IAC/BA,KAAK,CAACW,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAACA,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAE1D,MAAMG,OAAO,GAAGlB,aAAa,CAC3B;EACE,CAACE,KAAK,CAACiB,kBAAkB,GAAGN,gBAAgB;EAC5C,CAACX,KAAK,CAACkB,oBAAoB,GAAGH;AAChC,CAAC,EACDL,YAAY,CACb;AAED,eAAeM,OAAO"},"metadata":{},"sourceType":"module"}