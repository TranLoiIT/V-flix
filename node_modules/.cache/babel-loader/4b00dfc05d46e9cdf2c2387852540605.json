{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = function (nextState, reducerName, action) {\n  // eslint-disable-next-line no-undefined\n  if (nextState === undefined) {\n    throw new Error('Reducer \"' + reducerName + '\" returned undefined when handling \"' + action.type + '\" action. To ignore an action, you must explicitly return the previous state.');\n  }\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["../../src/utilities/validateNextState.js"],"names":["nextState","reducerName","action","undefined","Error","type"],"mappings":";;;;;kBAAe,UAACA,SAAD,EAAYC,WAAZ,EAAiCC,MAAjC,EAA0D;EACvE;EACA,IAAIF,SAAAA,KAAcG,SAAlB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CAAU,WAAA,GAAcH,WAAd,GAA4B,sCAA5B,GAAqEC,MAAAA,CAAOG,IAA5E,GAAmF,+EAA7F,CAAN;EACD;AACF,C","sourcesContent":["export default (nextState, reducerName: string, action: Object): void => {\n  // eslint-disable-next-line no-undefined\n  if (nextState === undefined) {\n    throw new Error('Reducer \"' + reducerName + '\" returned undefined when handling \"' + action.type + '\" action. To ignore an action, you must explicitly return the previous state.');\n  }\n};\n"]},"metadata":{},"sourceType":"script"}