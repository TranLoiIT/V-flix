{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport { put, takeEvery } from 'redux-saga/effects';\nimport types from './types';\nconst getErrors = createAction(types.GET_ERRORS);\nconst clearErrors = createAction(types.CLEAR_ERRORS);\nconst getErrorsSuccess = createAction(types.GET_ERRORS_SUCCESS);\nconst clearErrorsSuccess = createAction(types.CLEAR_ERRORS_SUCCESS);\nconst actions = {\n  getErrors,\n  clearErrors\n};\nfunction* getErrorsSaga(action) {\n  try {\n    yield put(getErrorsSuccess(action.payload));\n  } catch (err) {\n    console.log(err);\n  }\n}\nfunction* clearErrorsSaga() {\n  try {\n    yield put(clearErrorsSuccess());\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* sagas() {\n  yield takeEvery(types.GET_ERRORS, getErrorsSaga);\n  yield takeEvery(types.CLEAR_ERRORS, clearErrorsSaga);\n}\nexport default actions;","map":{"version":3,"names":["createAction","put","takeEvery","types","getErrors","GET_ERRORS","clearErrors","CLEAR_ERRORS","getErrorsSuccess","GET_ERRORS_SUCCESS","clearErrorsSuccess","CLEAR_ERRORS_SUCCESS","actions","getErrorsSaga","action","payload","err","console","log","clearErrorsSaga","sagas"],"sources":["/home/vmo/Desktop/test/vmoflix-vn/src/state/modules/error/actions.js"],"sourcesContent":["import { createAction } from 'redux-actions';\nimport { put, takeEvery } from 'redux-saga/effects';\nimport types from './types';\n\nconst getErrors = createAction(types.GET_ERRORS);\nconst clearErrors = createAction(types.CLEAR_ERRORS);\nconst getErrorsSuccess = createAction(types.GET_ERRORS_SUCCESS);\nconst clearErrorsSuccess = createAction(types.CLEAR_ERRORS_SUCCESS);\n\nconst actions = {\n  getErrors,\n  clearErrors,\n};\n\nfunction* getErrorsSaga(action) {\n  try {\n    yield put(getErrorsSuccess(action.payload));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* clearErrorsSaga() {\n  try {\n    yield put(clearErrorsSuccess());\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* sagas() {\n  yield takeEvery(types.GET_ERRORS, getErrorsSaga);\n  yield takeEvery(types.CLEAR_ERRORS, clearErrorsSaga);\n}\n\nexport default actions;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACnD,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,SAAS,GAAGJ,YAAY,CAACG,KAAK,CAACE,UAAU,CAAC;AAChD,MAAMC,WAAW,GAAGN,YAAY,CAACG,KAAK,CAACI,YAAY,CAAC;AACpD,MAAMC,gBAAgB,GAAGR,YAAY,CAACG,KAAK,CAACM,kBAAkB,CAAC;AAC/D,MAAMC,kBAAkB,GAAGV,YAAY,CAACG,KAAK,CAACQ,oBAAoB,CAAC;AAEnE,MAAMC,OAAO,GAAG;EACdR,SAAS;EACTE;AACF,CAAC;AAED,UAAUO,aAAaA,CAACC,MAAM,EAAE;EAC9B,IAAI;IACF,MAAMb,GAAG,CAACO,gBAAgB,CAACM,MAAM,CAACC,OAAO,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF;AAEA,UAAUG,eAAeA,CAAA,EAAG;EAC1B,IAAI;IACF,MAAMlB,GAAG,CAACS,kBAAkB,EAAE,CAAC;EACjC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF;AAEA,OAAO,UAAUI,KAAKA,CAAA,EAAG;EACvB,MAAMlB,SAAS,CAACC,KAAK,CAACE,UAAU,EAAEQ,aAAa,CAAC;EAChD,MAAMX,SAAS,CAACC,KAAK,CAACI,YAAY,EAAEY,eAAe,CAAC;AACtD;AAEA,eAAeP,OAAO"},"metadata":{},"sourceType":"module"}