{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _getStateName = require('./getStateName');\nvar _getStateName2 = _interopRequireDefault(_getStateName);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nexports.default = function (state, reducers, action) {\n  var reducerNames = Object.keys(reducers);\n  if (!reducerNames.length) {\n    return 'Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.';\n  }\n  var stateName = (0, _getStateName2.default)(action);\n  if (_immutable2.default.isImmutable ? !_immutable2.default.isImmutable(state) : !_immutable2.default.Iterable.isIterable(state)) {\n    return 'The ' + stateName + ' is of unexpected type. Expected argument to be an instance of Immutable.Collection or Immutable.Record with the following properties: \"' + reducerNames.join('\", \"') + '\".';\n  }\n  var unexpectedStatePropertyNames = state.toSeq().keySeq().toArray().filter(function (name) {\n    return !reducers.hasOwnProperty(name);\n  });\n  if (unexpectedStatePropertyNames.length > 0) {\n    return 'Unexpected ' + (unexpectedStatePropertyNames.length === 1 ? 'property' : 'properties') + ' \"' + unexpectedStatePropertyNames.join('\", \"') + '\" found in ' + stateName + '. Expected to find one of the known reducer property names instead: \"' + reducerNames.join('\", \"') + '\". Unexpected properties will be ignored.';\n  }\n  return null;\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["../../src/utilities/getUnexpectedInvocationParameterMessage.js"],"names":["state","reducers","action","reducerNames","Object","keys","length","stateName","isImmutable","Iterable","isIterable","join","unexpectedStatePropertyNames","toSeq","keySeq","toArray","filter","name","hasOwnProperty"],"mappings":";;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;;;;;;kBAEe,UAACA,KAAD,EAAgBC,QAAhB,EAAkCC,MAAlC,EAAqD;EAClE,IAAMC,YAAAA,GAAeC,MAAAA,CAAOC,IAAPD,CAAYH,QAAZG,CAArB;EAEA,IAAI,CAACD,YAAAA,CAAaG,MAAlB,EAA0B;IACxB,OAAO,+HAAP;EACD;EAED,IAAMC,SAAAA,GAAY,CAAA,CAAA,EAAA,cAAA,CAAA,OAAA,EAAaL,MAAb,CAAlB;EAEA,IAAI,WAAA,CAAA,OAAA,CAAUM,WAAV,GAAwB,CAAC,WAAA,CAAA,OAAA,CAAUA,WAAV,CAAsBR,KAAtB,CAAzB,GAAwD,CAAC,WAAA,CAAA,OAAA,CAAUS,QAAV,CAAmBC,UAAnB,CAA8BV,KAA9B,CAA7D,EAAmG;IACjG,OAAO,MAAA,GAASO,SAAT,GAAqB,0IAArB,GAAkKJ,YAAAA,CAAaQ,IAAbR,CAAkB,MAAlBA,CAAlK,GAA8L,IAArM;EACD;EAED,IAAMS,4BAAAA,GAA+B,KAAA,CAAMC,KAAN,CAAA,CAAA,CAAcC,MAAd,CAAA,CAAA,CAAuBC,OAAvB,CAAA,CAAA,CAAiCC,MAAjC,CAAwC,UAACC,IAAD,EAAU;IACrF,OAAO,CAAChB,QAAAA,CAASiB,cAATjB,CAAwBgB,IAAxBhB,CAAR;EACD,CAFoC,CAArC;EAIA,IAAIW,4BAAAA,CAA6BN,MAA7BM,GAAsC,CAA1C,EAA6C;IAC3C,OAAO,aAAA,IAAiBA,4BAAAA,CAA6BN,MAA7BM,KAAwC,CAAxCA,GAA4C,UAA5CA,GAAyD,YAA1E,CAAA,GAA0F,IAA1F,GAAiGA,4BAAAA,CAA6BD,IAA7BC,CAAkC,MAAlCA,CAAjG,GAA6I,aAA7I,GAA6JL,SAA7J,GAAyK,uEAAzK,GAAmPJ,YAAAA,CAAaQ,IAAbR,CAAkB,MAAlBA,CAAnP,GAA+Q,2CAAtR;EACD;EAED,OAAO,IAAP;AACD,C","sourcesContent":["import Immutable from 'immutable';\nimport getStateName from './getStateName';\n\nexport default (state: Object, reducers: Object, action: Object) => {\n  const reducerNames = Object.keys(reducers);\n\n  if (!reducerNames.length) {\n    return 'Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.';\n  }\n\n  const stateName = getStateName(action);\n\n  if (Immutable.isImmutable ? !Immutable.isImmutable(state) : !Immutable.Iterable.isIterable(state)) {\n    return 'The ' + stateName + ' is of unexpected type. Expected argument to be an instance of Immutable.Collection or Immutable.Record with the following properties: \"' + reducerNames.join('\", \"') + '\".';\n  }\n\n  const unexpectedStatePropertyNames = state.toSeq().keySeq().toArray().filter((name) => {\n    return !reducers.hasOwnProperty(name);\n  });\n\n  if (unexpectedStatePropertyNames.length > 0) {\n    return 'Unexpected ' + (unexpectedStatePropertyNames.length === 1 ? 'property' : 'properties') + ' \"' + unexpectedStatePropertyNames.join('\", \"') + '\" found in ' + stateName + '. Expected to find one of the known reducer property names instead: \"' + reducerNames.join('\", \"') + '\". Unexpected properties will be ignored.';\n  }\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"script"}