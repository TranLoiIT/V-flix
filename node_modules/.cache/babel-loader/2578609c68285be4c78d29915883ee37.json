{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _utilities = require('./utilities');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nexports.default = function (reducers) {\n  var getDefaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _immutable2.default.Map;\n  var reducerKeys = Object.keys(reducers);\n\n  // eslint-disable-next-line space-infix-ops\n  return function () {\n    var inputState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n    var action = arguments[1];\n\n    // eslint-disable-next-line no-process-env\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = (0, _utilities.getUnexpectedInvocationParameterMessage)(inputState, reducers, action);\n      if (warningMessage) {\n        // eslint-disable-next-line no-console\n        console.error(warningMessage);\n      }\n    }\n    return inputState.withMutations(function (temporaryState) {\n      reducerKeys.forEach(function (reducerName) {\n        var reducer = reducers[reducerName];\n        var currentDomainState = temporaryState.get(reducerName);\n        var nextDomainState = reducer(currentDomainState, action);\n        (0, _utilities.validateNextState)(nextDomainState, reducerName, action);\n        temporaryState.set(reducerName, nextDomainState);\n      });\n    });\n  };\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["../src/combineReducers.js"],"names":["reducers","getDefaultState","Map","reducerKeys","Object","keys","inputState","action","process","env","NODE_ENV","warningMessage","console","error","withMutations","temporaryState","forEach","reducerName","reducer","currentDomainState","get","nextDomainState","set"],"mappings":";;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;;;;;kBAKe,UAACA,QAAD,EAA4E;EAAA,IAAzDC,eAAyD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA5B,WAAA,CAAA,OAAA,CAAUC,GAAkB;EACzF,IAAMC,WAAAA,GAAcC,MAAAA,CAAOC,IAAPD,CAAYJ,QAAZI,CAApB;;EAEA;EACA,OAAO,YAA8E;IAAA,IAA7EE,UAA6E,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAArDL,eAAAA,EAAqD;IAAA,IAAlCM,MAAkC,GAAA,SAAA,CAAA,CAAA,CAAA;;IACnF;IACA,IAAIC,OAAAA,CAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;MACzC,IAAMG,cAAAA,GAAiB,CAAA,CAAA,EAAA,UAAA,CAAA,uCAAA,EAAwCL,UAAxC,EAAoDN,QAApD,EAA8DO,MAA9D,CAAvB;MAEA,IAAII,cAAJ,EAAoB;QAClB;QACAC,OAAAA,CAAQC,KAARD,CAAcD,cAAdC,CAAAA;MACD;IACF;IAED,OAAO,UAAA,CACJE,aADI,CACU,UAACC,cAAD,EAAoB;MACjCZ,WAAAA,CAAYa,OAAZb,CAAoB,UAACc,WAAD,EAAiB;QACnC,IAAMC,OAAAA,GAAUlB,QAAAA,CAASiB,WAATjB,CAAhB;QACA,IAAMmB,kBAAAA,GAAqBJ,cAAAA,CAAeK,GAAfL,CAAmBE,WAAnBF,CAA3B;QACA,IAAMM,eAAAA,GAAkBH,OAAAA,CAAQC,kBAARD,EAA4BX,MAA5BW,CAAxB;QAEA,CAAA,CAAA,EAAA,UAAA,CAAA,iBAAA,EAAkBG,eAAlB,EAAmCJ,WAAnC,EAAgDV,MAAhD,CAAA;QAEAQ,cAAAA,CAAeO,GAAfP,CAAmBE,WAAnBF,EAAgCM,eAAhCN,CAAAA;MACD,CARDZ,CAAAA;IASD,CAXI,CAAP;EAYD,CAvBD;AAwBD,C","sourcesContent":["import Immutable from 'immutable';\nimport {\n  getUnexpectedInvocationParameterMessage,\n  validateNextState\n} from './utilities';\n\nexport default (reducers: Object, getDefaultState: ?Function = Immutable.Map): Function => {\n  const reducerKeys = Object.keys(reducers);\n\n  // eslint-disable-next-line space-infix-ops\n  return (inputState: ?Function = getDefaultState(), action: Object): Immutable.Map => {\n    // eslint-disable-next-line no-process-env\n    if (process.env.NODE_ENV !== 'production') {\n      const warningMessage = getUnexpectedInvocationParameterMessage(inputState, reducers, action);\n\n      if (warningMessage) {\n        // eslint-disable-next-line no-console\n        console.error(warningMessage);\n      }\n    }\n\n    return inputState\n      .withMutations((temporaryState) => {\n        reducerKeys.forEach((reducerName) => {\n          const reducer = reducers[reducerName];\n          const currentDomainState = temporaryState.get(reducerName);\n          const nextDomainState = reducer(currentDomainState, action);\n\n          validateNextState(nextDomainState, reducerName, action);\n\n          temporaryState.set(reducerName, nextDomainState);\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"script"}