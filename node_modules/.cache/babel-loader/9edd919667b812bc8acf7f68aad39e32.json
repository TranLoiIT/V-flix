{"ast":null,"code":"import { authAdminApi, changePwAdminApi, getAdminApi, logoutAdminApi, updateAdminApi } from 'apis/adminApi';\nimport { createAction } from 'redux-actions';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { errorActions } from '../error';\nimport types from './types';\nconst {\n  getErrors,\n  clearErrors\n} = errorActions;\n\n//= =============== ACTIONS ===============//\n// Action Load Admin\nconst loadAdmin = createAction(types.LOAD_ADMIN);\nconst adminLoading = createAction(types.ADMIN_LOADING);\nconst adminLoaded = createAction(types.ADMIN_LOADED);\nconst authError = createAction(types.AUTH_ERROR);\n\n// Action Login\nconst login = createAction(types.LOGIN);\nconst loginSuccess = createAction(types.LOGIN_SUCCESS);\nconst loginFail = createAction(types.LOGIN_FAIL);\n\n// Action Logout\nconst logout = createAction(types.LOGOUT);\nconst logoutSuccess = createAction(types.LOGOUT_SUCCESS);\n\n// Update Admin\nconst updateAdmin = createAction(types.UPDATE_ADMIN);\nconst updateAdminSuccess = createAction(types.UPDATE_ADMIN_SUCCESS);\n\n// Action Change Password\nconst changePasswordAdmin = createAction(types.CHANGE_PASSWORD);\n\n// EXPORT ACTION\nexport const actions = {\n  loadAdmin,\n  login,\n  logout,\n  changePasswordAdmin,\n  updateAdmin\n};\n\n//= =============== SAGAS ===============//\nfunction* loadAdminSaga() {\n  try {\n    yield put(adminLoading());\n    const res = yield call(getAdminApi);\n    yield put(adminLoaded(res.data));\n  } catch (err) {\n    yield put(getErrors({\n      msg: err.response.data,\n      status: err.response.status,\n      id: null\n    }));\n    yield put(authError());\n  }\n}\nfunction* loginSaga(action) {\n  try {\n    const res = yield call(authAdminApi, action.payload);\n    yield put(loginSuccess(res.data));\n    yield put(clearErrors());\n  } catch (err) {\n    console.log(err);\n    yield put(getErrors({\n      msg: err.response.data,\n      status: err.response.status,\n      id: 'LOGIN_FAIL'\n    }));\n    yield put(loginFail());\n  }\n}\nfunction* logoutSaga() {\n  try {\n    yield call(logoutAdminApi);\n    yield put(logoutSuccess());\n  } catch (err) {\n    console.log(err);\n  }\n}\nfunction* updateAdminSaga(action) {\n  try {\n    yield put(adminLoading());\n    const res = yield call(updateAdminApi, action.payload);\n    yield put(updateAdminSuccess(res.data));\n  } catch (err) {\n    console.log(err);\n  }\n}\nfunction* changePasswordSaga(action) {\n  try {\n    yield call(changePwAdminApi, action.payload);\n    yield put(logout());\n    yield put(clearErrors());\n  } catch (err) {\n    console.log(err);\n    yield put(getErrors({\n      msg: err.response.data,\n      status: err.response.status,\n      id: 'CHANGE_PASSWORD_FAIL'\n    }));\n  }\n}\nexport function* sagas() {\n  yield takeEvery(types.LOAD_ADMIN, loadAdminSaga);\n  yield takeEvery(types.LOGIN, loginSaga);\n  yield takeEvery(types.LOGOUT, logoutSaga);\n  yield takeEvery(types.UPDATE_ADMIN, updateAdminSaga);\n  yield takeEvery(types.CHANGE_PASSWORD, changePasswordSaga);\n}","map":{"version":3,"names":["authAdminApi","changePwAdminApi","getAdminApi","logoutAdminApi","updateAdminApi","createAction","call","put","takeEvery","errorActions","types","getErrors","clearErrors","loadAdmin","LOAD_ADMIN","adminLoading","ADMIN_LOADING","adminLoaded","ADMIN_LOADED","authError","AUTH_ERROR","login","LOGIN","loginSuccess","LOGIN_SUCCESS","loginFail","LOGIN_FAIL","logout","LOGOUT","logoutSuccess","LOGOUT_SUCCESS","updateAdmin","UPDATE_ADMIN","updateAdminSuccess","UPDATE_ADMIN_SUCCESS","changePasswordAdmin","CHANGE_PASSWORD","actions","loadAdminSaga","res","data","err","msg","response","status","id","loginSaga","action","payload","console","log","logoutSaga","updateAdminSaga","changePasswordSaga","sagas"],"sources":["/home/vmo/Desktop/demo/test/full-flim-vn/src/state/modules/admin/actions.js"],"sourcesContent":["import {\n  authAdminApi,\n  changePwAdminApi,\n  getAdminApi,\n  logoutAdminApi,\n  updateAdminApi,\n} from 'apis/adminApi';\nimport { createAction } from 'redux-actions';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { errorActions } from '../error';\nimport types from './types';\n\nconst { getErrors, clearErrors } = errorActions;\n\n//= =============== ACTIONS ===============//\n// Action Load Admin\nconst loadAdmin = createAction(types.LOAD_ADMIN);\nconst adminLoading = createAction(types.ADMIN_LOADING);\nconst adminLoaded = createAction(types.ADMIN_LOADED);\nconst authError = createAction(types.AUTH_ERROR);\n\n// Action Login\nconst login = createAction(types.LOGIN);\nconst loginSuccess = createAction(types.LOGIN_SUCCESS);\nconst loginFail = createAction(types.LOGIN_FAIL);\n\n// Action Logout\nconst logout = createAction(types.LOGOUT);\nconst logoutSuccess = createAction(types.LOGOUT_SUCCESS);\n\n// Update Admin\nconst updateAdmin = createAction(types.UPDATE_ADMIN);\nconst updateAdminSuccess = createAction(types.UPDATE_ADMIN_SUCCESS);\n\n// Action Change Password\nconst changePasswordAdmin = createAction(types.CHANGE_PASSWORD);\n\n// EXPORT ACTION\nexport const actions = {\n  loadAdmin,\n  login,\n  logout,\n  changePasswordAdmin,\n  updateAdmin,\n};\n\n//= =============== SAGAS ===============//\nfunction* loadAdminSaga() {\n  try {\n    yield put(adminLoading());\n    const res = yield call(getAdminApi);\n    yield put(adminLoaded(res.data));\n  } catch (err) {\n    yield put(\n      getErrors({\n        msg: err.response.data,\n        status: err.response.status,\n        id: null,\n      }),\n    );\n    yield put(authError());\n  }\n}\n\nfunction* loginSaga(action) {\n  try {\n    const res = yield call(authAdminApi, action.payload);\n    yield put(loginSuccess(res.data));\n    yield put(clearErrors());\n  } catch (err) {\n    console.log(err);\n    yield put(\n      getErrors({\n        msg: err.response.data,\n        status: err.response.status,\n        id: 'LOGIN_FAIL',\n      }),\n    );\n    yield put(loginFail());\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(logoutAdminApi);\n    yield put(logoutSuccess());\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* updateAdminSaga(action) {\n  try {\n    yield put(adminLoading());\n    const res = yield call(updateAdminApi, action.payload);\n    yield put(updateAdminSuccess(res.data));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* changePasswordSaga(action) {\n  try {\n    yield call(changePwAdminApi, action.payload);\n    yield put(logout());\n    yield put(clearErrors());\n  } catch (err) {\n    console.log(err);\n    yield put(\n      getErrors({\n        msg: err.response.data,\n        status: err.response.status,\n        id: 'CHANGE_PASSWORD_FAIL',\n      }),\n    );\n  }\n}\n\nexport function* sagas() {\n  yield takeEvery(types.LOAD_ADMIN, loadAdminSaga);\n  yield takeEvery(types.LOGIN, loginSaga);\n  yield takeEvery(types.LOGOUT, logoutSaga);\n  yield takeEvery(types.UPDATE_ADMIN, updateAdminSaga);\n  yield takeEvery(types.CHANGE_PASSWORD, changePasswordSaga);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}